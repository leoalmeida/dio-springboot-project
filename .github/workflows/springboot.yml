# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: SpringBoot backend CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 17 ]
    name: Rodar testes automatizados no Java ${{ matrix.java }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup java ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: 'oracle'
        java-version: ${{ matrix.java }}
    - run: ./mvnw -f pom.xml clean test
  
  zap-scan:
    needs: test
    uses: ./.github/workflows/zap_scan.yml
    secrets: inherit

  release:
    runs-on: ubuntu-latest
    needs: test
    name: Build, package and upload .jar artifact
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
    - name: Build and package project
      run: ./mvnw -f pom.xml clean package
    - name: Show contents of the current working directory
      run: ls -la
    - name: Show contents of the target directory
      run: ls -la target
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifact
        path: ./target/springboot-project-0.0.1.jar

  #heroku:
  #  needs: release
  #  uses: ./.github/workflows/Heroku.yml
  #  secrets: inherit

  #heroku:
  #  needs: release
  #  uses: ./.github/workflows/Heroku.yml
  #  secrets: inherit

  #docker:
  #  needs: test-backend
  #  uses: ./.github/workflows/Docker.yml
  #  secrets: inherit
  
  #deploy_ecs:
  #  needs: docker
  #  uses: ./.github/workflows/ECS.yml
  #  secrets: inherit
